#!/usr/bin/env bash

# enable unofficial bash strict mode
set -euo pipefail
IFS=$'\n\t'

# Use Chezmoi to get source root as it runs the script from temp files
HOME_ROOT="{{ .chezmoi.sourceDir }}"
SRC_ROOT=$(cd "${HOME_ROOT}"/.. && pwd -P)
source "${SRC_ROOT}/scripts/common.sh"

DRYRUN="${DRYRUN:-false}"

run_bundle() {
  local brewfile="${1}"
  shift
  if [[ "${DRYRUN}" == "true" ]]; then
    log::status "DRYRUN" "$(ansi --green "brew bundle --no-lock --file \"${brewfile}\"")"
  else
    brew bundle install --no-lock --file "${brewfile}"
  fi
}

{{ if eq .chezmoi.os "darwin" }}

# Only install Homebrew packages if not deploying minimal version
{{ if not .config_state.minimal }}
log::status "Installing MacOSX Homebrew packages"

# Install primary homebrew packages
# Brewfile hash: {{ include "Brewfile" | sha256sum }}
run_bundle "${HOME_ROOT}/Brewfile"

# Install Apple Silicon specific packages
{{ if eq .chezmoi.arch "arm64" }}
log::status "Installing MacOSX ARM64 Homebrew packages"

# Brewfile-Darwin-arm64 hash: {{ include "Brewfile-Darwin-arm64" | sha256sum }}
run_bundle "${HOME_ROOT}/Brewfile-Darwin-arm64"
{{end}}

# Install Amzn homebrew packages
{{ if (hasSuffix "@amazon.com" .email) }}
log::status "Installing Amzn Homebrew packages"

# Amzn Brewfile hash: {{ include "Brewfile-Amzn" | sha256sum }}
run_bundle "${HOME_ROOT}/Brewfile-Amzn"
{{ end }}
{{ else }}
log::status "$(ansi --yellow "Skipping Homebrew package install due to minimal config")"
{{ end }}
{{ end }}
